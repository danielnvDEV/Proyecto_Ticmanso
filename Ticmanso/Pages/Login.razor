@using System.Net.Http.Json
@using TicmansoCrud.Shared
@using TicmansoWebAPI.Models
@using TicmansoWebAPI
@using System.ComponentModel.DataAnnotations

@inject HttpClient httpClient

@page "/"
<PageTitle>Login</PageTitle>

<MudCard>
    <MudCardContent>
        <MudForm @ref="form" @bind-IsValid="@success" >
            <MudTextField T="string" Label="Username" Required="true" RequiredError="El nombre de usuario es requerido" />
            <MudTextField T="string" Label="Password" InputType="InputType.Password" Required="true" RequiredError="La contraseña es requerida" />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" FullWidth="true">Submit</MudButton>
        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <MudText Align="Align.Center">Don't have any account?</MudText>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Sign up</MudButton>
    </MudCardActions>
</MudCard>
<style>
    .form_main {
        width: 280px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: rgb(255, 255, 255);
        padding: 30px 30px 30px 30px;
        border-radius: 30px;
        box-shadow: 0px 0px 40px rgba(0, 0, 0, 0.062);
    }

    .heading {
        font-size: 2.5em;
        color: #2e2e2e;
        font-weight: 700;
        margin: 15px 0 30px 0;
    }

    .inputContainer {
        width: 100%;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .inputIcon {
        position: absolute;
        left: 10px;
    }

    .inputField {
        width: 100%;
        height: 40px;
        background-color: transparent;
        border: none;
        border-bottom: 2px solid rgb(173, 173, 173);
        border-radius: 30px;
        margin: 10px 0;
        color: black;
        font-size: .8em;
        font-weight: 500;
        box-sizing: border-box;
        padding-left: 30px;
    }

        .inputField:focus {
            outline: none;
            border-bottom: 2px solid rgb(199, 114, 255);
        }

        .inputField::placeholder {
            color: rgb(80, 80, 80);
            font-size: 1em;
            font-weight: 500;
        }

    #button {
        position: relative;
        width: 100%;
        border: 2px solid #8000ff;
        background-color: #8000ff;
        height: 40px;
        color: white;
        font-size: .8em;
        font-weight: 500;
        letter-spacing: 1px;
        border-radius: 30px;
        margin: 10px;
        cursor: pointer;
        overflow: hidden;
    }

        #button::after {
            content: "";
            position: absolute;
            background-color: rgba(255, 255, 255, 0.253);
            height: 100%;
            width: 150px;
            top: 0;
            left: -200px;
            border-bottom-right-radius: 100px;
            border-top-left-radius: 100px;
            filter: blur(10px);
            transition-duration: .5s;
        }

        #button:hover::after {
            transform: translateX(600px);
            transition-duration: .5s;
        }

    .signupContainer {
        margin: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 20px;
    }

        .signupContainer p {
            font-size: .9em;
            font-weight: 500;
            color: black;
        }

        .signupContainer a {
            font-size: .7em;
            font-weight: 500;
            background-color: #2e2e2e;
            color: white;
            text-decoration: none;
            padding: 8px 15px;
            border-radius: 20px;
        }
</style>



@code {
    bool success;
    MudForm form;
    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}