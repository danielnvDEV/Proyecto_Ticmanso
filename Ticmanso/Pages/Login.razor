@using System.Net.Http
@using Microsoft.Extensions.DependencyInjection
@using Blazored.SessionStorage
@using TicmansoWebAPI.Models

@page "/login"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SessionStorageServiceDTO SessionStorage

<MudContainer MaxWidth="MaxWidth.Small">
    <MudCard>
        <MudCardContent>
            <MudTextField @bind-Value="Username" Label="Username" Variant="Variant.Outlined" Class="mb-4"></MudTextField>
            <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Outlined" InputType="InputType.Password"></MudTextField>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LoginAsync">Login</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    private string Username { get; set; }
    private string Password { get; set; }

    private async Task LoginAsync()
    {
        var httpClient = HttpClientFactory.CreateClient();
        var loginData = new { Username, Password };

        var response = await httpClient.PostAsJsonAsync("https://api.example.com/login", loginData);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            await SessionStorage.SetItemAsync("token", token);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Manejar error de login
        }
    }
}