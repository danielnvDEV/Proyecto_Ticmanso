@using System.Net.Http
@using Microsoft.Extensions.DependencyInjection
@using Blazored.SessionStorage
@using TicmansoWebAPI.Models

@page "/login"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject SessionStorageServiceDTO SessionStorage

<MudContainer MaxWidth="MaxWidth.Small">
    <MudCard>
        <MudCardContent>
            <MudTextField @bind-Value="Username" Label="Username" Variant="Variant.Outlined" Class="mb-4"></MudTextField>
            <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Outlined" InputType="InputType.Password"></MudTextField>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="LoginAsync">Login</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {

     protected override async Task OnInitializedAsync()
    {
        var token = await SessionStorage.GetItemAsync<string>("token");
        if (!string.IsNullOrEmpty(token))
        {
            NavigationManager.NavigateTo("/dashboard");
        }
    }

    private string Username { get; set; }
    private string Password { get; set; }

    private async Task LoginAsync()
    {
        var httpClient = HttpClientFactory.CreateClient();

        LoginDTO requestData = new LoginDTO();

                requestData.Email = Username;
                requestData.password = Password;


        var response = await httpClient.PostAsJsonAsync("https://localhost:7144/api/Ticmanso/login", requestData);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();

            await SessionStorage.SetItemAsync("token", token);
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            // Manejar error de login
        }
    }
}